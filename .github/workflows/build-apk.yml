name: Build APK Release

# Trigger the workflow
on:
  # Automatic trigger: any branch starting with 'release/' AND feature/apk-workflow for testing
  push:
    branches:
      - 'release/**'
      - 'feature/apk-workflow'  # Temporary for testing
  
  # Manual trigger: button in GitHub Actions tab
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch to build from'
        required: false
        default: 'current'

jobs:
  build-apk:
    name: Build Release APK
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Setup Java
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: gradle/actions/setup-gradle@v3

      # Step 4: Decode and setup keystore
      - name: Setup Release Keystore
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > release.keystore
          ls -la release.keystore

      # Step 5: Decode google-services.json
      - name: Setup google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES }}" | base64 --decode > app/google-services.json

      # Step 6: Grant execute permission for gradlew
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Step 7: Build Release APK
      - name: Build Release APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew assembleRelease --no-daemon --stacktrace

      # Step 8: Get branch name for APK naming
      - name: Get branch name
        id: branch-name
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "branch=manual" >> $GITHUB_OUTPUT
          else
            branch="${{ github.ref_name }}"
            # Remove 'release/' prefix if present
            branch_clean=$(echo "$branch" | sed 's/^release\///')
            echo "branch=$branch_clean" >> $GITHUB_OUTPUT
          fi

      # Step 9: Rename APK with meaningful name
      - name: Rename APK
        run: |
          cd app/build/outputs/apk/release/
          mv app-release.apk MyGarden-${{ steps.branch-name.outputs.branch }}-${{ github.run_number }}-release.apk
          ls -la *.apk

      # Step 10: Upload APK as artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyGarden-${{ steps.branch-name.outputs.branch }}-${{ github.run_number }}-release
          path: app/build/outputs/apk/release/MyGarden-${{ steps.branch-name.outputs.branch }}-${{ github.run_number }}-release.apk
          retention-days: 90

      # Step 11: Create GitHub Release (only for release branches, not manual)
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/heads/release/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.branch-name.outputs.branch }}-v${{ github.run_number }}
          name: Release ${{ steps.branch-name.outputs.branch }} v${{ github.run_number }}
          body: |
            ðŸš€ **MyGarden Release APK**
            
            **Branch:** `${{ github.ref_name }}`
            **Build Number:** `${{ github.run_number }}`
            **Commit:** `${{ github.sha }}`
            
            ## ðŸ“± Installation Instructions
            1. Download the APK file below
            2. Enable "Install from unknown sources" on your Android device
            3. Install the APK
            
            ## âœ… Features
            - Release build optimized for performance
            - Signed with production certificate
            - Ready for testing and distribution
          files: app/build/outputs/apk/release/MyGarden-${{ steps.branch-name.outputs.branch }}-${{ github.run_number }}-release.apk
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 12: Build Summary
      - name: Build Summary
        run: |
          echo "## ðŸŽ‰ APK Build Completed Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "**APK Name:** MyGarden-${{ steps.branch-name.outputs.branch }}-${{ github.run_number }}-release.apk" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Build Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "**Triggered by:** Automatic (push to release branch)" >> $GITHUB_STEP_SUMMARY
            echo "**GitHub Release:** Created âœ…" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Triggered by:** Manual dispatch" >> $GITHUB_STEP_SUMMARY
            echo "**GitHub Release:** Skipped (manual build)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "**Artifact Location:** GitHub Actions Artifacts section" >> $GITHUB_STEP_SUMMARY